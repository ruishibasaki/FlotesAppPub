#pragma once 

#include "instance_data.hpp"

#include <vector>

class InstanceModel{
    /**
     * Main interface for Instances model
     * An instance model is build from an InstanceData
     * and will randomly modify some of its variables
     **/
public:
    const InstanceData* _base; 
    std::string _class;

    InstanceModel(const InstanceData* b, std::string c) : _base(b), _class(c) {}
    ~InstanceModel(){}

    void copyBaseInfo(InstanceData& data);
    void virtual generate(InstanceData& data){};
};

//=================================================================
//=================================================================
//=================================================================

class RandomDemandsPerTypeInstanceModel : public InstanceModel{

public:
    std::vector<double> _m_demands;  //mean
    std::vector<double> _sd_demands; //standard deviation
    size_t nb_types;
    
    RandomDemandsPerTypeInstanceModel(const InstanceData* b,
                                       std::string c,
                                       size_t sz,
                                       const std::vector<double>& m,
                                       const std::vector<double>& sd) : 
                                       InstanceModel(b,c),nb_types(sz) , _m_demands(m), _sd_demands(sd){}
    
    void generate(InstanceData& data);
};

//=================================================================
//=================================================================
//=================================================================

class RandomVehicleCapacityInstanceModel : public InstanceModel{
/**
 *  Simple Instance Model with random Vehicles Capacity
 * 
 * Vehicles Capacity are drawn from balanced mixture of gaussian distributions.
 * For a list of K couples of Mean m_i and Standard deviations sd_i values.
 * A couple (m_i,sd_i) is selected with probability 1/K
 * Then the Vehicle capacity is drawn from a normal distribution 
 * of parameter (m_i,sd_i)
 * 
 *  
 **/
public:
    double _m_vehicleCapa;  //mean
    double _sd_vehicleCapa; //standard deviation

    RandomVehicleCapacityInstanceModel(const InstanceData* b,
                                       std::string c,
                                       double m,
                                       double sd) : InstanceModel(b,c), _m_vehicleCapa(m), _sd_vehicleCapa(sd){}
    void generate(InstanceData& data);
};

//=================================================================
//=================================================================
//=================================================================

#define MAX_CLIENTS 1000
#define RAND_SEQ4 (int[]){3, 2, 1, 2, 2, 2, 3, 2, 2, 4, 3, 1, 2, 2, 2, 1, 1, 4, 3, 1, 3, 2, 3, 2, 3, 4, 2, 1, 1, 3, 2, 3, 1, 4, 2, 2, 4, 1, 2, 3, 1, 1, 3, 3, 2, 4, 3, 4, 4, 4, 2, 1, 4, 4, 1, 3, 1, 3, 1, 1, 2, 2, 1, 4, 3, 4, 2, 2, 4, 1, 3, 1, 1, 3, 4, 2, 1, 3, 3, 3, 4, 4, 2, 1, 3, 1, 4, 2, 2, 4, 1, 4, 4, 3, 2, 2, 4, 3, 1, 2, 1, 3, 3, 4, 4, 4, 2, 1, 3, 3, 2, 4, 1, 4, 3, 4, 2, 3, 2, 2, 2, 3, 3, 1, 2, 3, 3, 1, 4, 2, 1, 3, 3, 2, 1, 1, 3, 3, 3, 3, 4, 3, 2, 2, 1, 1, 4, 1, 3, 1, 1, 3, 3, 2, 4, 2, 1, 4, 1, 3, 4, 3, 4, 3, 3, 4, 2, 3, 4, 1, 3, 2, 1, 3, 1, 1, 2, 2, 3, 4, 3, 2, 2, 2, 3, 1, 4, 2, 1, 2, 1, 3, 2, 4, 4, 4, 1, 1, 3, 4, 3, 3, 4, 4, 3, 2, 3, 1, 2, 1, 3, 4, 1, 2, 2, 1, 4, 4, 2, 2, 3, 3, 3, 4, 1, 1, 1, 4, 3, 3, 1, 3, 3, 1, 1, 1, 2, 2, 2, 4, 3, 4, 4, 3, 1, 2, 1, 4, 1, 4, 3, 2, 4, 1, 4, 1, 1, 1, 2, 1, 1, 2, 2, 1, 2, 4, 1, 2, 1, 3, 2, 1, 2, 3, 2, 2, 2, 3, 2, 3, 4, 2, 4, 3, 1, 4, 1, 3, 4, 4, 1, 1, 2, 2, 2, 3, 2, 2, 4, 4, 1, 1, 2, 2, 1, 2, 4, 2, 3, 2, 4, 1, 2, 4, 4, 2, 4, 2, 2, 1, 4, 3, 2, 2, 1, 3, 4, 1, 1, 2, 2, 2, 3, 4, 4, 2, 1, 4, 2, 3, 1, 1, 1, 1, 3, 4, 3, 1, 2, 3, 1, 1, 4, 3, 4, 3, 1, 2, 2, 4, 3, 2, 1, 1, 1, 4, 1, 2, 1, 3, 4, 3, 1, 2, 2, 1, 1, 2, 1, 4, 3, 1, 3, 2, 2, 1, 3, 2, 2, 4, 3, 4, 3, 4, 2, 1, 4, 1, 2, 4, 4, 4, 2, 1, 3, 3, 1, 1, 4, 2, 3, 1, 3, 2, 3, 2, 3, 3, 2, 1, 2, 1, 2, 2, 4, 4, 4, 4, 3, 4, 1, 1, 3, 2, 4, 4, 4, 1, 3, 4, 3, 4, 2, 4, 3, 1, 2, 1, 1, 2, 1, 2, 1, 4, 4, 3, 3, 1, 4, 4, 2, 1, 1, 3, 2, 3, 2, 3, 1, 3, 4, 2, 3, 4, 2, 1, 3, 4, 1, 1, 2, 2, 3, 3, 4, 2, 1, 4, 2, 4, 4, 2, 1, 2, 1, 1, 4, 3, 3, 2, 1, 2, 4, 4, 1, 4, 4, 4, 4, 1, 4, 3, 4, 1, 1, 3, 1, 3, 2, 1, 4, 3, 1, 1, 4, 2, 3, 3, 3, 1, 2, 1, 1, 2, 2, 1, 3, 2, 1, 3, 2, 2, 2, 1, 3, 2, 4, 1, 2, 4, 2, 4, 1, 2, 1, 4, 1, 1, 2, 4, 2, 2, 1, 1, 1, 2, 3, 2, 2, 4, 2, 2, 4, 4, 3, 1, 4, 4, 4, 4, 4, 1, 1, 1, 4, 3, 4, 3, 1, 4, 4, 1, 2, 2, 3, 1, 1, 1, 3, 1, 4, 3, 4, 2, 1, 3, 2, 1, 4, 4, 4, 4, 4, 1, 2, 2, 3, 4, 3, 1, 3, 4, 2, 1, 1, 2, 2, 2, 1, 4, 1, 1, 3, 4, 2, 3, 1, 1, 3, 3, 3, 3, 2, 1, 1, 3, 3, 3, 1, 3, 2, 2, 3, 4, 4, 2, 3, 2, 1, 4, 4, 1, 2, 2, 1, 2, 3, 3, 3, 3, 4, 1, 4, 4, 3, 4, 3, 3, 3, 2, 3, 1, 1, 3, 1, 3, 3, 4, 4, 3, 3, 2, 1, 2, 2, 1, 4, 3, 1, 1, 2, 3, 3, 3, 1, 4, 4, 4, 1, 1, 3, 2, 3, 1, 2, 4, 3, 4, 3, 2, 4, 2, 3, 3, 1, 1, 1, 3, 3, 1, 2, 2, 1, 2, 3, 1, 2, 4, 1, 2, 3, 3, 4, 4, 1, 3, 2, 1, 1, 4, 3, 2, 4, 4, 1, 3, 2, 2, 4, 4, 1, 1, 4, 4, 2, 4, 2, 1, 1, 2, 1, 3, 1, 2, 2, 1, 3, 2, 2, 1, 1, 2, 3, 3, 1, 3, 2, 3, 2, 3, 4, 4, 2, 4, 3, 3, 1, 1, 1, 2, 3, 3, 3, 1, 1, 3, 1, 1, 4, 4, 2, 1, 3, 4, 3, 4, 2, 2, 3, 2, 3, 4, 3, 3, 3, 4, 1, 4, 2, 2, 2, 2, 1, 3, 1, 2, 1, 2, 1, 1, 1, 1, 4, 2, 1, 2, 4, 2, 4, 1, 4, 3, 3, 3, 1, 3, 4, 3, 2, 2, 3, 1, 2, 3, 2, 1, 1, 2, 4, 3, 2, 3, 3, 3, 3, 2, 4, 1, 2, 3, 2, 2, 1, 1, 1, 4, 1, 1, 4, 4, 1, 4, 2, 4, 1, 1, 1, 1, 1, 3, 4, 1, 2, 1, 4, 3, 2, 4, 4, 3, 4, 2, 2, 4, 4, 4, 4, 1, 3, 2, 2, 2, 4, 2, 3, 1, 4, 4, 3, 1, 4, 2, 4, 1, 3, 2, 3, 4, 3, 1, 4, 2, 1, 4, 3, 4, 4, 2, 3, 2, 1, 1, 4, 1, 2, 2, 1, 3, 2, 4, 3, 1, 4, 2, 4, 4, 4, 2, 2, 2, 3, 1, 3, 3, 4, 4, 2, 4, 3, 1, 4, 3, 1, 1, 1, 2, 4, 1, 4, 3, 1, 3, 4, 4, 1, 3, 3, 1, 2, 3}

#define RAND_SEQ12 (int[]){6, 8, 6, 9, 9, 11, 10, 12, 11, 7, 7, 5, 1, 6, 5, 3, 3, 1, 11, 6, 7, 10, 6, 8, 4, 2, 6, 1, 2, 12, 9, 7, 5, 5, 12, 12, 9, 1, 2, 8, 9, 8, 12, 7, 1, 5, 3, 6, 9, 2, 2, 1, 4, 9, 4, 1, 1, 9, 6, 1, 3, 3, 5, 4, 1, 5, 9, 6, 7, 8, 2, 1, 10, 3, 11, 12, 3, 11, 5, 9, 11, 10, 8, 6, 7, 8, 11, 8, 3, 3, 9, 2, 6, 1, 1, 2, 1, 8, 12, 9, 12, 9, 5, 2, 9, 11, 1, 7, 1, 1, 3, 11, 2, 12, 1, 5, 3, 1, 6, 11, 10, 3, 10, 9, 6, 12, 8, 8, 10, 1, 9, 1, 3, 5, 2, 11, 8, 11, 6, 12, 5, 2, 6, 11, 2, 12, 4, 6, 9, 9, 6, 8, 11, 6, 9, 4, 6, 5, 9, 7, 10, 2, 4, 3, 9, 12, 10, 1, 12, 8, 4, 6, 10, 12, 1, 1, 12, 6, 9, 1, 9, 6, 8, 10, 4, 1, 4, 11, 11, 8, 1, 10, 3, 10, 8, 11, 6, 10, 12, 9, 8, 1, 6, 10, 9, 4, 3, 12, 12, 7, 4, 6, 2, 9, 10, 6, 12, 10, 4, 1, 9, 9, 7, 9, 8, 9, 6, 9, 2, 5, 5, 3, 5, 10, 4, 5, 12, 9, 9, 11, 11, 12, 4, 10, 9, 6, 6, 2, 2, 3, 1, 1, 6, 10, 8, 1, 10, 12, 12, 10, 12, 3, 9, 1, 10, 2, 9, 9, 1, 10, 12, 4, 8, 9, 6, 9, 10, 2, 4, 12, 12, 8, 3, 12, 11, 11, 9, 12, 6, 9, 5, 12, 1, 9, 6, 9, 10, 12, 10, 8, 1, 4, 2, 4, 6, 3, 7, 5, 6, 8, 2, 2, 3, 4, 12, 2, 11, 11, 10, 8, 2, 9, 12, 12, 12, 8, 3, 6, 2, 12, 12, 12, 11, 6, 1, 8, 7, 6, 10, 11, 10, 7, 10, 4, 7, 1, 9, 11, 10, 1, 1, 9, 2, 12, 2, 2, 4, 6, 10, 9, 4, 4, 10, 10, 6, 5, 7, 12, 4, 3, 7, 2, 8, 4, 4, 6, 8, 5, 4, 12, 12, 12, 8, 2, 4, 11, 12, 12, 1, 9, 10, 8, 10, 4, 10, 11, 2, 11, 4, 12, 9, 9, 5, 5, 3, 10, 10, 10, 9, 5, 10, 7, 3, 3, 2, 11, 9, 4, 4, 3, 10, 8, 8, 1, 8, 10, 5, 7, 4, 8, 8, 7, 5, 11, 1, 12, 1, 12, 7, 6, 8, 4, 2, 3, 4, 2, 3, 3, 11, 6, 2, 4, 3, 7, 7, 9, 3, 12, 8, 2, 4, 10, 12, 6, 1, 7, 7, 1, 4, 2, 8, 8, 12, 3, 6, 5, 6, 1, 6, 4, 8, 6, 1, 2, 3, 2, 11, 12, 8, 1, 12, 11, 10, 7, 8, 12, 8, 4, 11, 4, 6, 8, 3, 6, 12, 3, 7, 7, 10, 9, 12, 11, 7, 1, 3, 2, 9, 5, 6, 6, 4, 4, 10, 6, 10, 2, 8, 8, 7, 1, 2, 9, 8, 1, 9, 2, 5, 7, 4, 2, 5, 12, 12, 11, 2, 11, 12, 2, 10, 11, 5, 12, 8, 2, 11, 2, 2, 12, 12, 4, 9, 7, 3, 11, 11, 7, 11, 8, 9, 1, 7, 10, 1, 9, 7, 10, 8, 11, 2, 7, 11, 7, 3, 8, 8, 3, 12, 10, 3, 11, 6, 4, 9, 7, 6, 1, 6, 6, 9, 10, 4, 3, 4, 2, 11, 5, 7, 4, 6, 1, 1, 9, 2, 7, 2, 6, 4, 6, 6, 9, 12, 1, 4, 9, 8, 8, 6, 4, 7, 2, 4, 2, 4, 3, 7, 11, 4, 9, 7, 5, 5, 10, 6, 7, 1, 10, 5, 11, 10, 2, 8, 2, 8, 9, 2, 9, 2, 1, 8, 6, 10, 3, 3, 7, 2, 12, 3, 6, 11, 7, 9, 1, 7, 1, 6, 6, 7, 7, 12, 12, 8, 8, 4, 6, 12, 11, 5, 3, 8, 11, 3, 3, 8, 4, 6, 9, 4, 12, 3, 10, 11, 6, 6, 8, 10, 9, 2, 7, 4, 2, 10, 1, 7, 10, 1, 10, 12, 6, 7, 7, 7, 6, 10, 10, 7, 10, 8, 1, 2, 11, 4, 7, 1, 8, 8, 9, 1, 9, 12, 8, 10, 8, 2, 5, 11, 9, 6, 8, 3, 3, 3, 3, 12, 7, 8, 11, 1, 4, 3, 12, 1, 2, 10, 4, 12, 2, 7, 8, 7, 7, 11, 3, 3, 10, 4, 8, 9, 7, 1, 3, 10, 5, 1, 5, 2, 3, 10, 1, 8, 3, 5, 9, 5, 11, 8, 12, 7, 11, 5, 6, 5, 1, 5, 9, 11, 7, 1, 5, 1, 11, 12, 7, 12, 6, 1, 10, 8, 10, 8, 3, 7, 8, 12, 12, 10, 11, 2, 8, 2, 3, 8, 6, 6, 12, 12, 3, 6, 8, 10, 10, 12, 2, 4, 11, 3, 9, 9, 9, 12, 3, 7, 3, 2, 2, 9, 9, 3, 12, 8, 6, 6, 9, 9, 4, 10, 12, 8, 4, 12, 12, 6, 5, 2, 7, 11, 10, 9, 4, 4, 2, 7, 11, 12, 2, 7, 3, 1, 5, 3, 6, 8, 6, 10, 12, 10, 12, 11, 5, 3, 8, 6, 2, 9, 7, 3, 5, 10, 10, 12, 3, 3, 7, 4, 1, 6, 10, 11, 6, 6, 9, 5, 2, 12, 8, 4, 1, 2, 3, 4, 10, 10, 7, 11, 9, 6, 8, 2, 9, 6, 1, 11, 11, 6, 5, 7, 10, 4, 3, 2, 4, 10, 7, 11, 6, 9, 12, 6, 7, 3, 9, 7, 11, 12, 10, 8, 11, 8, 5, 7, 8, 3, 4, 2, 1, 10, 7, 6, 12, 11, 3, 12, 8, 10, 6, 5, 4, 4, 10, 6, 7, 5, 3, 7, 2, 1, 10, 10, 10, 11, 7}


#define RAND_SEQ24 (int[]){9, 7, 10, 4, 6, 4, 5, 8, 14, 4, 4, 24, 3, 12, 20, 23, 1, 3, 7, 23, 1, 18, 12, 15, 4, 21, 12, 2, 12, 5, 2, 21, 2, 13, 21, 23, 6, 21, 22, 18, 13, 12, 14, 8, 15, 18, 1, 20, 10, 17, 1, 8, 17, 15, 8, 21, 5, 20, 15, 19, 12, 2, 7, 8, 17, 6, 11, 21, 2, 10, 18, 13, 23, 13, 5, 9, 7, 19, 12, 22, 23, 7, 18, 5, 9, 6, 9, 9, 10, 4, 6, 10, 6, 5, 7, 21, 16, 1, 3, 3, 22, 8, 22, 4, 19, 7, 7, 23, 9, 24, 1, 18, 19, 18, 11, 24, 4, 3, 24, 5, 2, 10, 8, 14, 18, 22, 24, 2, 1, 24, 11, 5, 23, 10, 17, 6, 11, 5, 11, 13, 19, 19, 5, 19, 9, 4, 24, 20, 2, 8, 10, 13, 24, 7, 9, 17, 16, 11, 4, 10, 17, 13, 16, 14, 9, 5, 2, 20, 14, 6, 23, 6, 11, 17, 23, 11, 11, 9, 23, 7, 23, 10, 9, 4, 16, 2, 5, 7, 1, 3, 3, 5, 18, 4, 16, 22, 11, 22, 3, 18, 8, 12, 8, 24, 21, 2, 22, 2, 16, 16, 2, 16, 3, 12, 8, 22, 10, 21, 1, 18, 7, 2, 8, 9, 12, 24, 21, 4, 3, 15, 7, 12, 16, 10, 24, 11, 9, 21, 4, 9, 23, 20, 10, 23, 19, 2, 12, 9, 8, 22, 20, 22, 13, 12, 21, 4, 13, 18, 6, 5, 4, 15, 8, 13, 7, 5, 15, 14, 5, 5, 22, 2, 20, 24, 20, 5, 19, 21, 8, 23, 9, 10, 22, 7, 7, 8, 6, 5, 20, 8, 4, 17, 9, 2, 23, 3, 11, 14, 3, 13, 21, 12, 14, 9, 21, 8, 12, 14, 10, 18, 6, 6, 20, 22, 21, 13, 6, 17, 15, 22, 20, 11, 1, 9, 21, 6, 19, 15, 7, 14, 3, 8, 19, 10, 11, 23, 21, 1, 9, 14, 20, 17, 10, 20, 15, 21, 5, 10, 19, 24, 24, 2, 20, 14, 11, 9, 16, 12, 24, 5, 3, 14, 20, 11, 20, 12, 9, 10, 5, 7, 24, 18, 16, 4, 6, 19, 1, 7, 16, 22, 12, 16, 18, 11, 8, 21, 10, 22, 11, 17, 13, 23, 9, 13, 18, 15, 6, 2, 18, 15, 15, 24, 23, 23, 3, 4, 5, 9, 1, 19, 10, 4, 20, 15, 24, 7, 15, 22, 3, 1, 7, 24, 17, 18, 8, 10, 24, 22, 15, 2, 18, 11, 19, 8, 20, 16, 9, 5, 8, 2, 10, 19, 3, 13, 17, 19, 15, 21, 2, 19, 10, 8, 22, 9, 15, 20, 7, 16, 5, 4, 4, 8, 17, 14, 3, 19, 23, 13, 20, 13, 1, 9, 17, 8, 9, 1, 7, 5, 15, 12, 9, 4, 3, 15, 5, 11, 12, 18, 3, 19, 23, 24, 7, 14, 13, 9, 19, 24, 12, 7, 10, 24, 20, 9, 22, 18, 5, 4, 12, 3, 24, 13, 9, 3, 20, 1, 22, 2, 13, 6, 21, 15, 12, 12, 18, 2, 15, 14, 7, 22, 12, 19, 9, 2, 8, 8, 3, 23, 21, 15, 3, 3, 7, 4, 20, 10, 12, 6, 6, 1, 13, 19, 22, 24, 17, 10, 22, 19, 17, 3, 1, 24, 16, 4, 22, 10, 20, 19, 11, 17, 5, 3, 16, 23, 3, 17, 6, 23, 12, 5, 19, 2, 16, 14, 2, 3, 2, 14, 1, 19, 22, 23, 10, 18, 11, 24, 9, 12, 17, 17, 10, 3, 2, 2, 23, 20, 12, 1, 8, 9, 21, 1, 16, 7, 18, 1, 19, 4, 12, 6, 10, 13, 19, 14, 18, 7, 7, 14, 8, 2, 8, 14, 22, 19, 17, 17, 20, 1, 4, 16, 16, 6, 9, 1, 16, 6, 14, 18, 7, 6, 5, 19, 16, 11, 19, 18, 5, 4, 11, 1, 22, 8, 18, 20, 11, 5, 13, 24, 17, 20, 3, 8, 5, 24, 10, 22, 15, 11, 5, 3, 24, 4, 13, 11, 3, 15, 17, 5, 17, 12, 21, 20, 22, 12, 22, 8, 17, 3, 16, 22, 10, 10, 6, 9, 15, 8, 21, 4, 19, 13, 18, 2, 17, 23, 15, 20, 7, 8, 24, 22, 17, 17, 16, 17, 21, 17, 16, 1, 14, 17, 12, 8, 3, 20, 2, 11, 24, 24, 16, 6, 1, 8, 21, 21, 23, 14, 21, 14, 12, 19, 4, 15, 3, 12, 13, 22, 7, 12, 24, 23, 19, 24, 7, 22, 22, 20, 12, 24, 5, 9, 4, 3, 9, 23, 4, 5, 2, 9, 5, 10, 9, 11, 1, 8, 8, 24, 4, 1, 9, 16, 5, 7, 7, 4, 18, 18, 22, 6, 2, 18, 24, 14, 13, 12, 16, 5, 16, 13, 4, 7, 19, 8, 10, 19, 15, 4, 10, 22, 9, 12, 20, 6, 8, 12, 23, 3, 10, 21, 10, 1, 12, 6, 21, 19, 22, 18, 22, 9, 6, 2, 16, 18, 16, 18, 16, 6, 5, 22, 9, 24, 14, 15, 10, 1, 17, 23, 20, 24, 21, 8, 15, 21, 15, 8, 7, 11, 17, 15, 24, 12, 7, 16, 10, 18, 24, 8, 11, 6, 8, 6, 24, 15, 12, 3, 3, 5, 17, 20, 20, 13, 4, 8, 15, 19, 3, 9, 3, 16, 2, 2, 3, 9, 12, 3, 12, 14, 13, 18, 16, 16, 18, 14, 8, 3, 15, 17, 1, 18, 22, 23, 14, 1, 2, 1, 23, 15, 13, 11, 9, 15, 2, 7, 9, 6, 22, 22, 9, 1, 18, 1, 15, 20, 1, 12, 4, 18, 3, 20, 16, 13, 3, 2, 23, 6, 2, 15, 3, 8, 21, 15, 2, 10, 17, 14, 2, 10, 21, 21, 20, 20, 7, 8, 24, 10, 9, 2, 7, 24, 23, 1, 24, 10, 15, 12, 5, 18, 10, 2, 4, 24, 6, 22, 14, 6, 2, 1, 13, 11, 10, 12}
